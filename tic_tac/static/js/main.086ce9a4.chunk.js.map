{"version":3,"sources":["components/Login/Input.jsx","components/Login/Form.jsx","components/tic_tac/Square.jsx","components/tic_tac/Board.jsx","components/tic_tac/Line.jsx","components/tic_tac/tic_tac.js","App.js","serviceWorker.js","index.js"],"names":["Input","type","name","placeholder","value","change","onChange","bind","this","Form","vissible","close","React","useState","log","setLog","pass","setPass","data","e","target","className","onSubmit","preventDefault","length","alert","map","item","i","key","style","color","Square","props","onClick","click","Board","squares","renderSquare","Component","Line","lines","a","b","c","calculateWinner","Game","state","history","Array","fill","stepNumber","xIsNext","handleClick","step","slice","setState","concat","move","status","current","winner","moves","desc","jumpTo","App","handleVissible","console","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.086ce9a4.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\n\r\n\r\nfunction Input({type, name, placeholder, value, change}){\r\n\r\n    return(\r\n        <>\r\n            <input\r\n                type={type}\r\n                name={name}\r\n                placeholder={placeholder}\r\n                value={value}\r\n                onChange={change.bind(this)}\r\n            />\r\n        </>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Input","import React from \"react\";\r\nimport Input from \"./Input\";\r\n\r\n\r\n\r\n\r\nfunction Form({vissible, close}){\r\n\r\n    let [log, setLog] = React.useState('')\r\n    let [pass, setPass] = React.useState('')\r\n\r\n\r\n    function changeLog(e){\r\n        setLog(log = e.target.value)\r\n    }\r\n\r\n    function changePass(e){\r\n        setPass( pass = e.target.value)\r\n    }\r\n\r\n\r\n    let data = [\r\n        {type:'text', name:'firstname', placeholder:'Логин', value: log, change: changeLog },\r\n        {type:'password', name:'password', placeholder:'Пароль',  value: pass, change: changePass}\r\n    ]\r\n\r\n    return(\r\n          <>\r\n              {\r\n                  vissible &&\r\n                  <form className={'signup'} onSubmit={(e)=> {\r\n                      e.preventDefault()\r\n                      if(log === 'dima' && pass==='pryanick' || log === 'dasha' && pass==='princess'){\r\n\r\n                          close()\r\n                      }\r\n                      if(log.length > 0 && pass.length>0 && log != 'dima' && pass != 'bull'\r\n                          &&  log != 'dasha' && pass != 'princess'){\r\n                          alert('Неверныое имя пользователя или пароль')\r\n\r\n                      }\r\n                      if(log.length === 0 || pass.length == 0){\r\n                          alert('Введите имя пользователя и пароль')\r\n\r\n                      }\r\n\r\n\r\n\r\n                  } }>\r\n                      {\r\n                          data.map((item,i) => (\r\n                              <Input\r\n                                  type={item.type}\r\n                                  name={item.name}\r\n                                  placeholder={item.placeholder}\r\n                                  key = {i}\r\n                                  value = {item.value}\r\n                                  change = {item.change}\r\n                              />\r\n                          ))\r\n                      }\r\n                      <button>Войти</button>\r\n                      <p style={{color: '#3D55BC'}}>Подсказка в консоли</p>\r\n                  </form>\r\n\r\n              }\r\n\r\n          </>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Form","import React from \"react\";\r\n\r\nexport function Square(props) {\r\n\r\n    return (\r\n        <button className={'square '} onClick={()=> props.click()}>\r\n            {props.value}\r\n        </button>\r\n    );\r\n\r\n}","import React from \"react\";\r\nimport {Square} from \"./Square\";\r\n\r\nexport class Board extends React.Component {\r\n    renderSquare(i) {\r\n\r\n        return (\r\n            <Square\r\n                value={this.props.squares[i]}\r\n                click={() => this.props.click(i)}\r\n            />\r\n        )\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(0)}\r\n                    {this.renderSquare(1)}\r\n                    {this.renderSquare(2)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(3)}\r\n                    {this.renderSquare(4)}\r\n                    {this.renderSquare(5)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(6)}\r\n                    {this.renderSquare(7)}\r\n                    {this.renderSquare(8)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport function Line(props){\r\n\r\n    let lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ]\r\n\r\n    for(let i = 0; i < lines.length; i++){\r\n        let [a,b,c] = lines[i];\r\n        if(props.squares[a] && props.squares[a] === props.squares[b] && props.squares[a] === props.squares[c]){\r\n            return (\r\n                <>\r\n                    <div className={'winner winner' + i} />\r\n                </>\r\n            )\r\n        }\r\n    }\r\n    return null\r\n}","import React from 'react';\r\nimport {Board} from \"./Board\";\r\nimport {Line} from \"./Line\";\r\n\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [{\r\n                squares: Array(9).fill(null),\r\n            }],\r\n            stepNumber: 0,\r\n            xIsNext: true,\r\n        };\r\n        this.handleClick = this.handleClick.bind(this)\r\n    }\r\n\r\n\r\n    handleClick(i) {\r\n        const step = this.state.stepNumber;\r\n        const history = this.state.history.slice(0, step + 1);\r\n        const current = history[step];\r\n        const squares = current.squares.slice()\r\n\r\n        if(calculateWinner(squares) || squares[i]){\r\n            return\r\n        }\r\n\r\n        squares[i] = this.state.xIsNext ? 'x' : 'o'\r\n\r\n        this.setState({\r\n            history: history.concat({\r\n                squares: squares\r\n            }),\r\n            stepNumber: history.length,\r\n            xIsNext: !this.state.xIsNext\r\n        })\r\n    }\r\n\r\n    jumpTo(move){\r\n        this.setState({\r\n            stepNumber: move,\r\n            xIsNext: (move % 2 ) === 0\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const history = this.state.history\r\n        const current = history[this.state.stepNumber];\r\n        const winner = calculateWinner(current.squares)\r\n        let moves = history.map((step, move)=>{\r\n            const desc = move ?\r\n                'Перейти к ходу #' + move\r\n                :\r\n                'К началу игры'\r\n\r\n                return(\r\n                    <li key={move}>\r\n                        <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n                    </li>\r\n                )\r\n        })\r\n        let status;\r\n        if (winner) {\r\n            status = 'Выиграл ' + winner;\r\n        } else {\r\n            status = 'Следующий ход: ' + (this.state.xIsNext ? 'X' : 'O');\r\n        }\r\n\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Line squares={current.squares}/>\r\n                    <Board\r\n                        squares={current.squares}\r\n                        click = {this.handleClick}\r\n                    />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div>{status} </div>\r\n                    <ol>{moves}</ol>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction calculateWinner(squares){\r\n    let lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ]\r\n\r\n    for(let i = 0; i < lines.length; i++){\r\n        let [a,b,c] = lines[i];\r\n        if(squares[a] && squares[a] === squares[b] && squares[a] === squares[c]){\r\n            return squares[a]\r\n        }\r\n    }\r\n    return null\r\n}\r\n\r\n\r\nexport default Game\r\n\r\n","import React from 'react';\nimport  'material-components-web/dist/material-components-web.css'\nimport './App.css';\nimport Form from \"./components/Login/Form\";\nimport Game from \"./components/tic_tac/tic_tac\";\nclass App extends React.Component{\n\n    constructor(props){\n        super(props)\n        this.state = {\n            vissible: true\n        }\n        this.handleVissible = this.handleVissible.bind(this)\n    }\n    handleVissible(){\n        this.setState({vissible: false})\n    }\n\n\n\n    render(){\n        console.log('логины для входа: dima, dasha\\n пароли для входа: pryanick, princess')\n    return (\n\n\n        <div className=\"App\">\n            <Form\n                vissible = {this.state.vissible}\n                close = {this.handleVissible}\n            />\n            {\n\n                this.state.vissible === false && <Game />\n            }\n        </div>\n    );\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\n\nReactDOM.render(\n\n        <App />,\n\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}