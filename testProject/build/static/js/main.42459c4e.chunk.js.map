{"version":3,"sources":["components/main/cities/city/City.module.css","components/main/countries/Countries.jsx","components/main/cities/city/City.jsx","components/main/cities/addNewCity/AddNewCity.jsx","components/main/cities/editCity/EditCity.jsx","components/main/cities/Cities.jsx","components/main/Main.jsx","App.js","index.js","components/data/Data.jsx"],"names":["module","exports","Countries","countries","active","addCityFormClose","className","map","item","onClick","id","key","title","text","City","name","description","remove","edit","styles","cityWrap","buttons","AddNewCity","addNewCityForm","setCity","handleChange","addNewCity","type","placeholder","value","onChange","cols","rows","EditCity","cancelEdit","editCity","setEdit","e","Cities","info","addCityForm","addCityFormOpen","React","useState","cities","setCities","newCity","setNewCity","copyOfCities","setCopyOfCities","citiesOfActiveCountry","filter","country","pop","removeCity","city","editCityOpen","event","target","concat","length","desc","i","changeCity","Fragment","country_id","Main","App","activeCountry","setActiveCountry","setAddCityForm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.42459c4e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cityWrap\":\"City_cityWrap__2_EOj\",\"buttons\":\"City_buttons__1Ra9p\"};","import React from 'react';\r\nimport './Countries.css';\r\n\r\n\r\n\r\nexport const Countries = ({countries, active, addCityFormClose}) => {\r\n\r\n    return(\r\n        <div className=\"col-lg-3\" >\r\n            <div className=\"countries\">\r\n                <h2>Countries</h2>\r\n                {countries.map((item)=>(\r\n                    <div\r\n                        onClick={()=> {\r\n                            addCityFormClose()\r\n                            active(item.id)\r\n                        }}\r\n                        className={`wrap ${item.active ? 'active' : ''}`}\r\n                        key={item.id}>\r\n                        <h3>{item.title}</h3>\r\n                        <p>{item.text}</p>\r\n                        <div className={'arrow'} />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport styles from './City.module.css'\r\n\r\n\r\n\r\nexport const City = ({id, name, description, remove, edit}) => {\r\n\r\n    return(\r\n        <div className={styles.cityWrap}>\r\n            <div className=\"cityInfo\">\r\n                <h3>{name}</h3>\r\n                <p>{description}</p>\r\n            </div>\r\n            <div className={styles.buttons}>\r\n                <span onClick={() => edit(id)}>&#128396;</span>\r\n                <span onClick={() => remove(id)}>&#128465;</span>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport './AddNewCity.css'\r\n\r\n\r\nexport const AddNewCity = ({addNewCityForm, setCity, handleChange, addNewCity}) => {\r\n\r\n    return (\r\n        <div className={'addCityWrap'}>\r\n            <h3>Add city</h3>\r\n            <input\r\n                name={'title'}\r\n                type=\"text\"\r\n                placeholder={'City name...'}\r\n                value={setCity.title}\r\n                onChange={handleChange}\r\n            />\r\n            <textarea\r\n                name=\"desc\"\r\n                cols=\"30\"\r\n                rows=\"4\"\r\n                placeholder={'City description...'}\r\n                value={setCity.title}\r\n                onChange={handleChange}\r\n            />\r\n            <div className=\"buttons\">\r\n                <button\r\n                    className={'buttonFrst'}\r\n                    onClick={addNewCity}\r\n                >\r\n                    Submit\r\n                </button>\r\n                <button\r\n                    className={'buttonScnd'}\r\n                    onClick={addNewCityForm}\r\n                >\r\n                    Cancel\r\n                </button>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport '../addNewCity/AddNewCity.css'\r\n\r\n\r\nexport const EditCity = ({id, cancelEdit, value, editCity, setEdit}) => {\r\n\r\n    return (\r\n        <div className={'addCityWrap'}>\r\n            <h3>Change city</h3>\r\n            <input\r\n                name={'title'}\r\n                type=\"text\"\r\n                placeholder={'City name...'}\r\n                value={value[0]}\r\n                onChange={e => editCity(id, e) }\r\n\r\n            />\r\n            <textarea\r\n                name={\"desc\"}\r\n                cols=\"30\"\r\n                rows=\"4\"\r\n                placeholder={'City description...'}\r\n                value={value[1]}\r\n                onChange={e => editCity(id, e) }\r\n\r\n            />\r\n            <div className=\"buttons\">\r\n                <button\r\n                    className={'buttonFrst'}\r\n                    onClick={() => setEdit(id)}\r\n                >\r\n                    Submit\r\n                </button>\r\n                <button\r\n                    className={'buttonScnd'}\r\n                    onClick={() => cancelEdit(id) }\r\n                >\r\n                    Cancel\r\n                </button>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {City} from \"./city/City\";\r\nimport {AddNewCity} from \"./addNewCity/AddNewCity\";\r\nimport {EditCity} from \"./editCity/EditCity\";\r\nimport './Cities.css'\r\n\r\n\r\nexport const Cities = ({info, addCityForm, addCityFormOpen, addCityFormClose}) => {\r\n    let [cities, setCities] = React.useState(info.cities)\r\n    let [newCity, setNewCity] = React.useState([{\"title\": \"\", \"desc\": \"\"}])\r\n    let [copyOfCities, setCopyOfCities] = React.useState(cities.map(item => ({...item})))\r\n\r\n\r\n    let citiesOfActiveCountry = info.countries.filter((country) => country.active && country.id).pop()\r\n\r\n    let handleChangeNewCity = (event) => {\r\n\r\n        setNewCity(newCity.map(city => {\r\n\r\n            city[event.target.name] = event.target.value\r\n\r\n            return city\r\n        }))\r\n\r\n    }\r\n\r\n    let addNewCity = () => {\r\n\r\n        setCities(cities = cities.concat({\r\n            edit: true,\r\n            \"id\": cities.length + 1,\r\n            \"country_id\": citiesOfActiveCountry.id,\r\n            \"title\": newCity[0].title,\r\n            \"desc\": newCity[0].desc\r\n        }))\r\n        newCity[0].title = ''\r\n        newCity[0].desc = ''\r\n        addCityFormClose()\r\n        setCopyOfCities(copyOfCities = cities.map(item => ({...item})))\r\n\r\n    }\r\n\r\n    let removeCity = (id) => {\r\n        setCities(cities.filter(city => city.id !== id))\r\n    }\r\n\r\n    let editCityOpen = (id) => {\r\n        setCities(cities.map(city => {\r\n            if (city.id === id) {\r\n                city.edit = !city.edit\r\n            }\r\n            return city\r\n        }))\r\n    }\r\n\r\n    let editCity = (id, event) => {\r\n\r\n        setCopyOfCities(copyOfCities.map(city => {\r\n            if (city.id === id) {\r\n                city[event.target.name] = event.target.value\r\n            }\r\n\r\n            return city\r\n        }))\r\n\r\n    }\r\n\r\n    let setEdit = (id) => {\r\n        setCities(cities = copyOfCities.map(city => {\r\n            if (city.id === id) {\r\n                city.edit = true\r\n            }\r\n            return {...city}\r\n        }))\r\n        setCopyOfCities(copyOfCities = cities.map(item => ({...item})))\r\n\r\n\r\n    }\r\n\r\n    let cancelEdit = (id) => {\r\n        setCopyOfCities(copyOfCities = cities.map(item => ({...item})))\r\n        return editCityOpen(id)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={'col-lg-9'}>\r\n            <h2>Cities</h2>\r\n            <div className=\"citiesWrap\">\r\n                {!addCityForm &&\r\n                <div className=\"buttonWrap\">\r\n                    <button\r\n                        onClick={() => addCityFormOpen()}\r\n                        className={'buttonFrst'}\r\n                    >\r\n                        +Add city\r\n                    </button>\r\n                </div>\r\n                }\r\n                {addCityForm &&\r\n                <AddNewCity\r\n                    addNewCityForm={() => addCityFormClose()}\r\n                    setCity={newCity}\r\n                    handleChange={handleChangeNewCity}\r\n                    addNewCity={addNewCity}\r\n\r\n                />}\r\n                {cities.map((city, i) => {\r\n                    let changeCity\r\n\r\n                    if(city.edit){\r\n                        changeCity =  <City\r\n                            name={city.title}\r\n                            description={city.desc}\r\n                            id={city.id}\r\n                            remove={removeCity}\r\n                            edit={editCityOpen}\r\n                        />\r\n                    }else{\r\n                        changeCity = <EditCity\r\n                            id={city.id}\r\n                            value={[copyOfCities[i].title, copyOfCities[i].desc]}\r\n                            editCity={editCity}\r\n                            setEdit={setEdit}\r\n                            cancelEdit={cancelEdit}\r\n                        />\r\n                    }\r\n\r\n\r\n                    return (\r\n                        <React.Fragment key={city.id}>\r\n                            {city.country_id === citiesOfActiveCountry.id && changeCity}\r\n                        </React.Fragment>\r\n                    )\r\n                })}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {Countries} from \"./countries/Countries\";\r\nimport {Cities} from \"./cities/Cities\";\r\n\r\n\r\n\r\nexport const Main = ({info, active, addCityForm, addCityFormOpen, addCityFormClose}) => {\r\n\r\n    return(\r\n        <section className={'main'}>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Countries\r\n                        countries={info.countries}\r\n                        active={active}\r\n                        addCityFormClose = {addCityFormClose}\r\n                    />\r\n                    <Cities\r\n                        info={info}\r\n                        addCityFormOpen = {addCityFormOpen}\r\n                        addCityFormClose = {addCityFormClose}\r\n                        addCityForm = {addCityForm}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </section>\r\n\r\n    )\r\n}","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap-grid.min.css'\nimport {Main} from \"./components/main/Main\";\nimport './App.css';\n\nfunction App({info}) {\n    let [activeCountry, setActiveCountry] = React.useState(info.countries)\n    let [addCityForm, setAddCityForm] = React.useState(false)\n\n\n    let active = (id) => {\n        setActiveCountry(activeCountry.map(item => {\n            /*item.id === id ? item.active = true : item.active = false*/\n            item.active = item.id === id\n            return item\n            })\n        )\n    }\n\n    return (\n        <>\n            <header className=\"App-header\">\n                <div className=\"container\">\n                    <h1>Countries of the world</h1>\n                </div>\n            </header>\n            <Main\n                info={info}\n                active={active}\n                addCityFormOpen = {()=>setAddCityForm(addCityForm = true)}\n                addCityFormClose = {()=>setAddCityForm(addCityForm = false)}\n                addCityForm = {addCityForm}\n            />\n            <footer className={'navbar-fixed-bottom row-fluid'}>\n                <div className=\"container\">\n                    <h4>test work</h4>\n                </div>\n            </footer>\n        </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport {data} from \"./components/data/Data\";\n\n\n\nReactDOM.render(<App info={data}/>, document.getElementById('root'));\n\n\n\n","import React from \"react\";\r\n\r\n\r\n\r\nexport const data = {\r\n    countries: [\r\n        {\r\n            \"id\": 1,\r\n            \"title\": \"United Kingdom\",\r\n            \"text\": \"The United Kingdom of Great Britain and Northern Ireland, commonly known as the United Kingdom(UK) or Britain, is a sovereign state in Europe.\",\r\n            active: true\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"title\": \"France\",\r\n            \"text\": \"France, officially the French Republic, is a unitary sovereign state comprising territory in western Europe and several overseas regions and territories.\",\r\n            active: false\r\n        },\r\n        {\r\n            \"id\": 3,\r\n            \"title\": \"Spain\",\r\n            \"text\": \"Spain, officially the Kingdom of Spain, is a sovereign state located on the Iberian Peninsula in southwestern Europe.\",\r\n            active: false\r\n        },\r\n        {\r\n            \"id\": 4,\r\n            \"title\": \"Germany\",\r\n            \"text\": \"Germany, officially the Federal Republic of Germany, is a federal parliamentary republic in western - central Europe.\",\r\n            active: false\r\n        }\r\n    ],\r\n    cities: [\r\n        {\r\n            edit: true,\r\n            \"id\": 1,\r\n            \"country_id\": 1,\r\n            \"title\": \"London\",\r\n            \"desc\": \"London is the capital and largest city of England and of the United Kingdom. Standing on the River Thames in the south-east of England, at the head of its 50-mile (80 km) estuary leading to the North Sea, London has been a major settlement for two millennia. Londinium was founded by the Romans.The City of London, London's ancient core − an area of just 1.12 square miles (2.9 km2) and colloquially known as the Square Mile − retains boundaries that closely follow its medieval limits. The City of Westminster is also an Inner London borough holding city status. Greater London is governed by the Mayor of London and the London Assembly.\"\r\n        },\r\n        {edit: true, \"id\": 2, \"country_id\": 1, \"title\": \"Liverpool\", \"desc\": \"Liverpool is a city and metropolitan borough in Merseyside, England. As of 2018, the population is approximately 494,814.[6][7] Liverpool is the ninth-largest English district by population, and the largest in Merseyside and the Liverpool City Region. It lies within the United Kingdom's sixth-most populous urban area. Liverpool's metropolitan area is the fifth-largest in the United Kingdom, with a population of 2.24 million.[8]\\n\" +\r\n                \"\\n\"},\r\n        {edit: true, \"id\": 3, \"country_id\": 2, \"title\": \"Paris\", \"desc\": \"\"},\r\n        {edit: true, \"id\": 4, \"country_id\": 3, \"title\": \"Madrid\", \"desc\": \"\"},\r\n        {edit: true, \"id\": 5, \"country_id\": 4, \"title\": \"Berlin\", \"desc\": \"\"},\r\n        {edit: true, \"id\": 6, \"country_id\": 4, \"title\": \"Munich\", \"desc\": \"\"},\r\n        {edit: true, \"id\": 7, \"country_id\": 4, \"title\": \"Hamburg\", \"desc\": \"\"}\r\n    ]\r\n\r\n}\r\n\r\n"],"sourceRoot":""}